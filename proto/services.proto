syntax = "proto3";

package tie;

service InferenceService {
  rpc EngineReady(EngineReadyRequest) returns (EngineReadyResponse) {}
  
  rpc ModelReady(ModelReadyRequest) returns (ModelReadyResponse) {}
  rpc LoadModel(ModelLoadRequest) returns (ModelLoadResponse) {}
  rpc UnloadModel(UnloadModelRequest) returns (UnloadModelResponse) {}
  
  rpc Infer(InferRequest) returns (InferResponse) {}
  rpc InferStream(stream InferRequest) returns (stream InferResponse) {}
}

// EngineReady
message EngineReadyRequest {
  string model_name = 1;
}

message EngineReadyResponse {
  bool is_ready = 1;
  string error_message = 2;
}


// ModelReady
message ModelReadyRequest {
  string model_name = 1;
}

message ModelReadyResponse {
  bool is_ready = 1;
  string model_name = 2;
  string error_message = 3;
}

// LoadModel
message ModelLoadRequest {
  string model_name = 1;
}
message ModelLoadResponse {
  bool is_loaded = 1;
  string model_name = 2;
  string error_message = 3;
}

// UnloadModel
message UnloadModelRequest {
  string model_name = 1;
}

message UnloadModelResponse {
  bool is_unloaded = 1;
  string model_name = 2;
  string error_message = 3;
}

// Infer
message InferRequest {
  repeated float data = 1;
  string model_name = 2;
  repeated int64 shape = 3;
}

message InferResponse {
  string data = 1;
  string error_message = 2;
}

// InferStream
message InferStreamRequest {
  string data = 1;
  string model_name = 2;
}

message InferStreamResponse {
  string data = 1;
  string error_message = 2;
}
